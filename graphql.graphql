type FacebookPage {
  id: ID!
  pageAccessToken: String!
  pageId: Float!
  name: String
  owner: User!
}

type Mutation {
  createFacebookPage(pageAccessToken: String!, pageId: Float!, name: String, ownerId: ID!): FacebookPage!
  updateFacebookPage(pageAccessToken: String, pageId: Float, name: String, ownerId: ID, id: ID!): FacebookPage!
  deleteFacebookPage(id: ID!): Boolean!
  deleteFacebookPages(ids: [ID!]!): Boolean!
  createPost(content: String!, authorId: ID): Post!
  updatePost(content: String, authorId: ID, id: ID!): Post!
  deletePost(id: ID!): Boolean!
  deletePosts(ids: [ID!]!): Boolean!
  createUser(password: String!, email: String!, type: UserType!): User!
  updateUser(password: String, email: String, type: UserType, id: ID!): User!
  deleteUser(id: ID!): Boolean!
  deleteUsers(ids: [ID!]!): Boolean!
}

type Post {
  id: ID!
  content: String!
  author: User
}

type Query {
  facebookPage(id: ID!): FacebookPage!
  facebookPages: [FacebookPage!]!
  post(id: ID!): Post!
  posts: [Post!]!
  user(id: ID!): User!
  users: [User!]!
}

type User {
  id: ID!
  email: String!
  type: UserType!
  facebookPages: [FacebookPage!]!
  posts: [Post!]!
}

enum UserType {
  StandardUser
  SuperAdmin
  Admin
}
